{"version":3,"sources":["components/Search.js","components/Image.js","components/ImageList.js","components/App.js","index.js"],"names":["Search","state","term","handleChange","event","setState","target","value","handleSubmit","preventDefault","props","onSearchSubmit","onSubmit","this","FormLabel","Input","onChange","type","FormHelperText","React","Component","Image","image","alt","className","src","ImageList","columnsCountBreakPoints","350","750","900","columnsCount","gutter","images","map","urls","small","alt_description","id","API_KEY","process","App","axios","get","params","query","then","response","data","results","catch","error","alert","console","log","ReactDOM","render","ThemeProvider","CSSReset","document","getElementById"],"mappings":"8NAuCeA,E,4MAnCbC,MAAQ,CACNC,KAAM,I,EAGRC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZH,KAAME,EAAME,OAAOC,S,EAIvBC,aAAe,SAACJ,GACdA,EAAMK,iBACN,EAAKC,MAAMC,eAAe,EAAKV,MAAMC,MACrC,EAAKG,SAAS,CACZH,KAAM,M,uDAKR,OACE,8BACE,uBAAMU,SAAUC,KAAKL,aAArB,UACE,cAACM,EAAA,EAAD,6BACA,cAACC,EAAA,EAAD,CACER,MAAOM,KAAKZ,MAAMC,KAClBc,SAAUH,KAAKV,aACfc,KAAK,SAEP,cAACC,EAAA,EAAD,0C,GA7BWC,IAAMC,W,iBCOZC,EARD,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACtB,OACE,qBAAKC,UAAU,aAAf,SACE,qBAAKC,IAAKH,EAAOC,IAAKA,O,iBCmBbG,E,uKAlBX,OACE,8BACE,cAAC,oBAAD,CAAmBC,wBAAyB,CAAEC,IAAK,EAAGC,IAAK,EAAGC,IAAK,GAAnE,SACE,cAAC,IAAD,CAASC,aAAc,EAAGC,OAAO,OAAjC,SACGnB,KAAKH,MAAMuB,OAAOC,KAAI,SAACZ,GAAD,OACrB,cAAC,EAAD,CAEEA,MAAOA,EAAMa,KAAKC,MAClBb,IAAKD,EAAMe,iBAFNf,EAAMgB,iB,GARHnB,IAAMC,WCAxBmB,EAAUC,8CAkCDC,E,4MA/BbxC,MAAQ,CACNgC,OAAQ,I,EAGVtB,eAAiB,SAACT,GAChBwC,IACGC,IADH,4DAC4DJ,GAAW,CACnEK,OAAQ,CACNC,MAAO3C,KAGV4C,MAAK,SAACC,GACL,EAAK1C,SAAS,CACZ4B,OAAQc,EAASC,KAAKC,aAGzBC,OAAM,SAACC,GACNC,MAAMC,QAAQC,IAAIH,Q,uDAKtB,OACE,gCACE,cAAC,EAAD,CAAQxC,eAAgBE,KAAKF,iBAC7B,cAAC,EAAD,CAAWsB,OAAQpB,KAAKZ,MAAMgC,gB,GA1BpBd,IAAMC,W,gBCAxBmC,IAASC,OACP,eAACC,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,IACA,cAAC,EAAD,OAEDC,SAASC,eAAe,W","file":"static/js/main.068722d2.chunk.js","sourcesContent":["import React from \"react\";\nimport { FormLabel, Input, FormHelperText } from \"@chakra-ui/core\";\n\nclass Search extends React.Component {\n  state = {\n    term: \"\",\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      term: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSearchSubmit(this.state.term);\n    this.setState({\n      term: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <FormLabel> Image Search </FormLabel>\n          <Input\n            value={this.state.term}\n            onChange={this.handleChange}\n            type=\"text\"\n          />\n          <FormHelperText>Using Unsplash API</FormHelperText>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from \"react\";\n\nconst Image = ({ image, alt }) => {\n  return (\n    <div className=\"image-list\">\n      <img src={image} alt={alt} />\n    </div>\n  );\n};\n\nexport default Image;\n","import React from \"react\";\nimport Image from \"./Image\";\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\";\n\nclass ImageList extends React.Component {\n  render() {\n    return (\n      <div>\n        <ResponsiveMasonry columnsCountBreakPoints={{ 350: 1, 750: 2, 900: 3 }}>\n          <Masonry columnsCount={3} gutter=\"15px\">\n            {this.props.images.map((image) => (\n              <Image\n                key={image.id}\n                image={image.urls.small}\n                alt={image.alt_description}\n              />\n            ))}\n          </Masonry>\n        </ResponsiveMasonry>\n      </div>\n    );\n  }\n}\n\nexport default ImageList;\n","import React from \"react\";\nimport Search from \"./Search\";\nimport axios from \"axios\";\nimport ImageList from \"./ImageList\";\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nclass App extends React.Component {\n  state = {\n    images: [],\n  };\n\n  onSearchSubmit = (term) => {\n    axios\n      .get(`https://api.unsplash.com/search/photos/?client_id=${API_KEY}`, {\n        params: {\n          query: term,\n        },\n      })\n      .then((response) => {\n        this.setState({\n          images: response.data.results,\n        });\n      })\n      .catch((error) => {\n        alert(console.log(error));\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <Search onSearchSubmit={this.onSearchSubmit} />\n        <ImageList images={this.state.images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\"\nimport App from './components/App'\nimport { ThemeProvider, CSSReset } from '@chakra-ui/core'\n\n\nReactDOM.render(\n  <ThemeProvider>\n   <CSSReset />\n   <App/>\n</ThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}